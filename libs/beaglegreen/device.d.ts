declare namespace pins {
    //% fixedInstance shim=pxt::getPin(USR0)
    const USR0: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(USR1)
    const USR1: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(USR2)
    const USR2: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(USR3)
    const USR3: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_07)
    const P8_07: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_08)
    const P8_08: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_09)
    const P8_09: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_10)
    const P8_10: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_11)
    const P8_11: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_12)
    const P8_12: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_13)
    const P8_13: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P8_14)
    const P8_14: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_15)
    const P8_15: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_16)
    const P8_16: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_17)
    const P8_17: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_18)
    const P8_18: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P8_19)
    const P8_19: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P8_26)
    const P8_26: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_11)
    const P9_11: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_12)
    const P9_12: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_13)
    const P9_13: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_14)
    const P9_14: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P9_15)
    const P9_15: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_16)
    const P9_16: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P9_17)
    const P9_17: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_18)
    const P9_18: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_21)
    const P9_21: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P9_22)
    const P9_22: PwmOnlyPin;
    //% fixedInstance shim=pxt::getPin(P9_23)
    const P9_23: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_24)
    const P9_24: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_25)
    const P9_25: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_26)
    const P9_26: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_27)
    const P9_27: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_30)
    const P9_30: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_33)
    const P9_33: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P9_35)
    const P9_35: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P9_36)
    const P9_36: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P9_37)
    const P9_37: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P9_38)
    const P9_38: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P9_39)
    const P9_39: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P9_40)
    const P9_40: AnalogInPin;
    //% fixedInstance shim=pxt::getPin(P9_41)
    const P9_41: DigitalInOutPin;
    //% fixedInstance shim=pxt::getPin(P9_42)
    const P9_42: PwmOnlyPin;
}